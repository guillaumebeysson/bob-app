name: Spring Boot => Build, Test, SonarCloud, Docker

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  Back-CI:
    name: Spring Boot CI/CD
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 'back'

    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      # 2. Configurer Java 17 pour le projet Spring Boot
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 5. Compile avec Maven
      - name: Compile with Maven
        run: mvn compile

      # 6. Tests avec Maven et génération du rapport JaCoCo
      - name: Tests with Maven
        run: mvn test jacoco:report -Djacoco.outputDirectory=target/site/jacoco

      # 7. Construction du package avec Maven sans exécuter les tests
      - name: Build with Maven
        run: mvn clean install --file pom.xml
      
      - name: Build Spring Boot JAR
        run: |
          mvn clean package -DskipTests

      # 8. Télécharger le rapport de couverture JaCoCo en tant qu'artefact
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco

      # 9. Analyse du code avec SonarCloud
      - name: Analyze code with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} 
        run: |
          mvn sonar:sonar \
          -Dsonar.projectKey=guillaumebeysson_bob-app \
          -Dsonar.organization=guillaumebeysson  \
          -Dsonar.host.url=https://sonarcloud.io \

      - name: List files in target
        run: ls -R target